// "use strict";

// module.exports = {
//   up: async (queryInterface, Sequelize) => {
//     // First, create the parent table with partition key
//     await queryInterface.sequelize.query(`
//       CREATE TABLE transactions (
//         id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
//         name VARCHAR(255) NOT NULL,
//         amount DECIMAL(10, 2) NOT NULL,
//         transaction_date DATE NOT NULL,
//         user_id INTEGER NOT NULL,
//         created_at TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP,
//         updated_at TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP,
//         deleted_at TIMESTAMP WITH TIME ZONE
//       ) PARTITION BY RANGE (transaction_date);
//     `);

//     // Create partitions for different date ranges
//     await queryInterface.sequelize.query(`
//       CREATE TABLE transactions_2024
//       PARTITION OF transactions
//       FOR VALUES FROM ('2024-01-01') TO ('2025-01-01');

//       CREATE TABLE transactions_2025
//       PARTITION OF transactions
//       FOR VALUES FROM ('2025-01-01') TO ('2026-01-01');
//     `);

//     // Create an index on the partition key for better performance
//     await queryInterface.sequelize.query(`
//       CREATE INDEX idx_transactions_date ON transactions (transaction_date);
//     `);
//   },

//   down: async (queryInterface, Sequelize) => {
//     // Drop the parent table (this will also drop all partitions)
//     await queryInterface.sequelize.query(
//       `DROP TABLE IF EXISTS transactions CASCADE;`
//     );
//   },
// };

"use strict";

module.exports = {
  up: async (queryInterface, Sequelize) => {
    // Create the parent table with a composite primary key
    await queryInterface.sequelize.query(`
      CREATE TABLE transactions (
        id INTEGER GENERATED BY DEFAULT AS IDENTITY,
        name VARCHAR(255) NOT NULL,
        amount DECIMAL(10, 2) NOT NULL,
        transaction_date DATE NOT NULL,
        user_id INTEGER NOT NULL,
        created_at TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP,
        updated_at TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP,
        deleted_at TIMESTAMP WITH TIME ZONE,
        PRIMARY KEY (id, transaction_date)  -- Composite primary key
      ) PARTITION BY RANGE (transaction_date);
    `);

    // Create partitions for different date ranges
    await queryInterface.sequelize.query(`
      CREATE TABLE transactions_2024 
      PARTITION OF transactions 
      FOR VALUES FROM ('2024-01-01') TO ('2025-01-01');

      CREATE TABLE transactions_2025 
      PARTITION OF transactions 
      FOR VALUES FROM ('2025-01-01') TO ('2026-01-01');
    `);

    // Create an index on the partition key for better performance
    await queryInterface.sequelize.query(`
      CREATE INDEX idx_transactions_date ON transactions (transaction_date);
    `);
  },

  down: async (queryInterface, Sequelize) => {
    // Drop the parent table (this will also drop all partitions)
    await queryInterface.sequelize.query(
      `DROP TABLE IF EXISTS transactions CASCADE;`
    );
  },
};
